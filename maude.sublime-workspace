{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"t",
				"T"
			],
			[
				"r",
				"R"
			],
			[
				"mete",
				"metaPrettyPrint"
			],
			[
				"Aximo",
				"AxiomList"
			],
			[
				"R",
				"RSLAssertion"
			],
			[
				"Hoare",
				"HoareQuadruple"
			],
			[
				"Con",
				"ConditionalStatement"
			],
			[
				"apply",
				"applyAuxVarElimination"
			],
			[
				"Logi",
				"LogicalVariable"
			],
			[
				"Goal",
				"GoalGraph"
			],
			[
				"PROVER-",
				"PROVER-INTERFACE"
			],
			[
				"idea",
				"ideaIU-2018"
			]
		]
	},
	"buffers":
	[
		{
			"file": "prover/prover-interface.maude",
			"settings":
			{
				"buffer_size": 11903,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/language/language_grammar.maude",
			"settings":
			{
				"buffer_size": 1344,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/goal-graph.maude",
			"settings":
			{
				"buffer_size": 1267,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "load relational-sep-logic.maude\nmod IMPLICATION-PROVER is\n\tincluding HOARE-QUADRUPLE .\n\n\t--- BEGIN proof rules\n\tvars R S T : Relation .\n\tvars P1 P2 Q1 Q2 : Assertion .\n\tvars P Q : Assertion .\n\tvars E E' E1 E1' : AExp .\n\n\t--- Relational BExp in case we change it later\n\tvar B : BExp .\n\n\trl R * false => false .\n\n\trl [emp ; emp] => Emp .\n\n\trl R * ( S \\/ T ) => (R * S) \\/ (R * T) .\n\n\trl [(P1 * P2) ; Q1 * Q2] => [P1 ; Q1] * [P2 ; Q2] .\n---\n\trl R * (exists x . S) => (exists x . R) * S .\n---\n\trl [(P1 /\\ P2) ; Q ] => [P1 ; Q] /\\ [ P2 ; Q ] .\n---\n\trl [P ; (Q1 /\\ Q2)] => [P ; Q1] /\\ [P ; Q2] .\n---\n\trl [(P1 \\/ P2) ; Q ] => [P1 ; Q] \\/ [P2 ; Q] .\n---\n\trl [P ; (Q1 \\/ Q2)] => [P ; Q1] \\/ [P ; Q2].\n---\n\trl [P ; false] => false .\n---\n\trl [false ; Q] => false .\n---\n\t--- This rule seems to cause problems with infinite loops??\n\t---rl R * ((E eqs E') /\\ Emp) => R /\\ (E eqs E') .\n---\n\trl (R * Q) /\\ B => R * (Q /\\ B) .\n---\n\trl [ (P /\\ B) ; Q ] => [ P ; (Q /\\ B) ] .\n---\n\trl [ P ; (Q /\\ B) ]  => [P ; Q ] /\\ B .\n---\n\n\trl [P ; Q] * (Emp * E eqs E') => [(P * (emp * E eqs E')) ; Q] .\n\n\t--- De sus o trec jos\n\trl [ (P * (emp /\\ E eqs E')) ; Q ] => [ P ; (Q * (emp /\\ E eqs E')) ] .\n\n\t--- De jos o trec in afara\n\trl [ P ; (Q * (emp /\\ E eqs E')) ] => [ P ; Q ] * (Emp /\\ E eqs E') .\n\t--- Here we switch from <=> to => \n\n\trl Emp => Same .\n\n\trl Same * Same => Same .\n\n\trl [ E |-> E1 ; E |-> E1 ] => Same .\n\n\trl Same /\\ ( [E |-> E1 ; E |-> E1'] * true ) => E1 eqs E1' .\n\n\trl R /\\ (E eqs E') \n\n endm\n\n",
			"file": "prover/implication-prover.maude",
			"file_size": 1461,
			"file_write_time": 131735216051627309,
			"settings":
			{
				"buffer_size": 1483,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/experiments.maude",
			"settings":
			{
				"buffer_size": 262,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/relational-sep-logic.maude",
			"settings":
			{
				"buffer_size": 958,
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/prover-grammar.maude",
			"settings":
			{
				"buffer_size": 2132,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "prover/separation-logic.maude",
			"settings":
			{
				"buffer_size": 811,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 75.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ma",
				"Set Syntax: Maude"
			],
			[
				"m",
				"Set Syntax: Maude"
			],
			[
				"MAU",
				"Set Syntax: Maude"
			],
			[
				"maud",
				"Set Syntax: Maude"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"set syntax maude",
				"Set Syntax: Maude"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"maude",
				"Set Syntax: Maude"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 533.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/alin/Licenta/MaudePlayground",
		"/home/alin/Licenta/MaudePlayground/prover",
		"/home/alin/Licenta/MaudePlayground/prover/language"
	],
	"file_history":
	[
		"/home/alin/Licenta/MaudePlayground/prover/language/Todo licenta:",
		"/home/alin/Licenta/MaudePlayground/prover/relational-sep-logic.maude",
		"/home/alin/Licenta/MaudePlayground/prover/implication-prover.maude",
		"/home/alin/Licenta/MaudePlayground/prover/runner.maude",
		"/home/alin/Licenta/MaudePlayground/prover/prover-grammar.maude",
		"/home/alin/Licenta/MaudePlayground/prover/separation-logic.maude",
		"/home/alin/Licenta/MaudePlayground/prover/language/language_grammar.maude",
		"/home/alin/Licenta/MaudePlayground/prover/goal-graph.maude",
		"/home/alin/Licenta/MaudePlayground/prover/prover-interface.maude",
		"/home/alin/Licenta/MaudePlayground/prover/examples.maude",
		"/home/alin/Licenta/MaudePlayground/prover/matching.maude",
		"/home/alin/Licenta/MaudePlayground/prover/axiom-matching.maude",
		"/home/alin/.config/i3/config",
		"/home/alin/LinuxSetup/ProvisioningScripts/install_i3.sh",
		"/home/alin/backup_hdd_win/alin/ProvisioningScripts/checklist",
		"/usr/projects/MaudePlayground/prover/examples.maude",
		"/usr/projects/MaudePlayground/prover/prover-grammar.maude",
		"/usr/projects/MaudePlayground/prover/language/language_grammar.maude",
		"/usr/projects/MaudePlayground/prover/separation-logic.maude",
		"/usr/projects/MaudePlayground/prover/experiments.maude",
		"/usr/projects/MaudePlayground/prover/relational-sep-logic.maude",
		"/usr/projects/MaudePlayground/prover/prover-interface.maude",
		"/usr/projects/MaudePlayground/prover/goal-graph.maude",
		"/usr/projects/MaudePlayground/limbaj_simplu.maude",
		"/usr/projects/MaudePlayground/limbaj_separat.maude",
		"/home/alin/bin/maude/maude_itp/itp-tool.maude",
		"/home/alin/projects/Licenta/MaudePlayground/setup_jetbrains_config_and_system_paths.sh",
		"/home/alin/projects/Licenta/MaudePlayground/limbaj_simplu.maude",
		"/home/alin/projects/Licenta/MaudePlayground/hoare_quadruple.maude",
		"/home/alin/projects/Licenta/MaudePlayground/prover-interface.maude",
		"/home/alin/Documents/list.fm",
		"/home/alin/.zshrc",
		"/home/alin/.config/i3blocks/config",
		"/home/alin/bin/cyclist/myocamlbuild.ml",
		"/home/alin/ProvisioningScripts/install_i3.sh",
		"/home/alin/.config/rofi/config",
		"/home/alin/ProvisioningScripts/install_monaco_font.sh",
		"/etc/apt/sources.list.d/google-chrome.list",
		"/etc/apt/sources.list.d/google.list",
		"/etc/i3status.conf",
		"/home/alin/rofi-example.config",
		"/home/alin/ProvisioningScripts/install_git.sh",
		"/home/alin/ProvisioningScripts/install_google_chrome.sh",
		"/home/alin/ProvisioningScripts/checklist",
		"/home/alin/ProvisioningScripts/install_zsh.sh",
		"/home/alin/ProvisioningScripts/projects_folder.sh",
		"/home/alin/ProvisioningScripts/install_intellij.sh",
		"/home/alin/ProvisioningScripts/install_",
		"/home/alin/ProvisioningScripts/install_webstorm.sh",
		"/home/alin/ProvisioningScripts/install_pycharm.sh",
		"/home/alin/ProvisioningScripts/install_clion.sh",
		"/home/alin/ProvisioningScripts/install_nodejs.sh",
		"/home/alin/ProvisioningScripts/install_SFNS_font.sh",
		"/home/alin/ProvisioningScripts/install_font_awesome.sh",
		"/home/alin/ProvisioningScripts/install_java"
	],
	"find":
	{
		"height": 42.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
			"",
			"SLAssertion"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"GG",
			"noRule",
			"=",
			"eq",
			"\n\t---",
			"\n\t",
			" \n",
			"nogoal",
			"ctor",
			" [",
			"format (d n nt d)",
			"format (d ct no d)",
			"format (c t ns o)",
			"P1",
			"10",
			"3",
			"upTerm",
			"noGoal",
			"LV",
			"SLHeap",
			"LogicalVariable",
			"Stmt",
			"RAssertion",
			"SLAssertion",
			"code",
			"fmod"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"GS",
			"noAction",
			"=>",
			"rl",
			"\n\t",
			"\n\t---",
			"format (d n t d)",
			"format (d n nt d)",
			"format (d ct no d)",
			"Command",
			"Relation",
			"Assertion"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "prover/prover-interface.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11903,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2160.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "prover/language/language_grammar.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1344,
						"regions":
						{
						},
						"selection":
						[
							[
								853,
								853
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "prover/goal-graph.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1267,
						"regions":
						{
						},
						"selection":
						[
							[
								1252,
								1252
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "prover/implication-prover.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1483,
						"regions":
						{
						},
						"selection":
						[
							[
								1474,
								1474
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 458.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "prover/experiments.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 262,
						"regions":
						{
						},
						"selection":
						[
							[
								93,
								93
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "prover/relational-sep-logic.maude",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 958,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "prover/prover-grammar.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2132,
						"regions":
						{
						},
						"selection":
						[
							[
								163,
								163
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "prover/separation-logic.maude",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 811,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Maude Syntax Highlighting/maude.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 52.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "maude.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 281.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
