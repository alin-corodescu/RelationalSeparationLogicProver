load relational-sep-logic.maude
load implication-prover.maude
mod GOAL-GRAPH is 
	protecting META-LEVEL .
	protecting BOOL .
	protecting HOARE-QUADRUPLE . 
	--- Sorts representing the goals we work with
	sorts Goal GoalGraph GoalList .

	subsort Goal < GoalGraph .
	subsort Goal < GoalList . 

	--- Building the Goal list 
	op _<>_ : GoalList GoalList -> GoalList [assoc id: emptyGL].

	op emptyGL : -> GoalList .
	op noGoal : -> Goal .

	sort Goal? .

	subsort Goal < Goal? . 
	op noMatch : -> Goal? .
	vars G G1 : Goal .
	var GL : GoalList .

	vars RR TT : Relation .

	var R R1 R2 : Relation .
	cmb R : Goal if (R1 => R2) := R .

	subsort Assertion < Goal .
	var P P1 P2 : Assertion .
	cmb P : Goal if (P1 => P2) := P .

	cmb G : Goal if noMatch =/= G . 

	op anyMatches : Goal GoalList -> Goal? .

	eq anyMatches(G, emptyGL) = noMatch .
	
	ceq anyMatches(G, G1 <> GL) = G1
		---if G := G1 .
		if metaXmatch(upModule('PROVER-INTERFACE, false), 
							upTerm(G1),
							upTerm(G),
							nil, 0, unbounded, 0) :: MatchPair .

	eq anyMatches(G, G1 <> GL) = anyMatches(G, GL) [owise].

	
	op tryImplicationProving : Goal -> Trace? .

	eq tryImplicationProving(RR => TT) = metaSearchPath(upModule('IMPLICATION-PROVER, false), 
							upTerm(RR),
							upTerm(TT),
							nil, '* , 40, 0) . 
	

endm